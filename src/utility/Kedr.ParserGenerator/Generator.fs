module Kedr.ParserGenerator.Generator

open System.IO

let generate (eof : 's) (grammar : Grammar<'s>) (parserNamespace : string) (stream : Stream) : unit =
    let automaton = LALR.Automaton.create eof grammar

    let writer = new StreamWriter(stream)

    writer.WriteLine(sprintf "namespace %s" parserNamespace)
    writer.WriteLine()
    writer.WriteLine("//-----------------------------------------------------------------------")
    writer.WriteLine("// This code was generated by a tool.")
    writer.WriteLine("// Changes to this file may cause incorrect behavior and will be lost if")
    writer.WriteLine("// the code is regenerated.")
    writer.WriteLine("//-----------------------------------------------------------------------")
    writer.WriteLine()
    writer.WriteLine("module Parser =")
    writer.WriteLine("    type Symbol =")
    for symbol in grammar.symbols do
        writer.WriteLine(sprintf "        | %s" (symbol.ToString()))

    writer.Flush()

    ()